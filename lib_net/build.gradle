apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'


android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        //Arouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [AROUTER_MODULE_NAME  : project.getName(), "room.schemaLocation": "$projectDir/schemas".toString()]

            }
        }
        multiDexEnabled true

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //支持java8
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    // For Kotlin projects
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.5'

    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["rxjava2"]
    api rootProject.ext.dependencies["rxandroid2"]
    api rootProject.ext.dependencies["autodispose"]
    api rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    api rootProject.ext.dependencies["retrofit_converter_gson"]
    api rootProject.ext.dependencies["logging_interceptor3"]
    api rootProject.ext.dependencies["utilcode"]
    //arouter
    api rootProject.ext.dependencies["arouter"]
    api rootProject.ext.dependencies["dagger2"]
    api rootProject.ext.dependencies["dagger_hilt"]

    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    kapt rootProject.ext.dependencies["arouter-compiler"]
    implementation rootProject.ext.dependencies["dagger_hilt"]

    annotationProcessor rootProject.ext.dependencies["dagger_hilt_compiler"]
    kapt rootProject.ext.dependencies["dagger_hilt_compiler"]

}